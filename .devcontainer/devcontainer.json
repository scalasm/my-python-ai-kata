// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/python-3
{
  "name": "Python AI Sandbox",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    "args": {
      // Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
      // Append -bullseye or -buster to pin to an OS version.
      // Use -bullseye variants on local on arm64/Apple Silicon.
      "VARIANT": "3.12-bookworm",
      // Options
      "NODE_VERSION": "20",
      // Additional Python tools
      "POETRY_VERSION": "2.1.1",
      "NOX_VERSION": "2025.2.9"
    }
  },

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false, // We use flake8
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
        "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint"
      },

      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.jupyter-renderers",
        "ms-python.flake8"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // We run on the same host as the Docker daemon, so we can use host networking.
  "runArgs": ["--network=host"],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "pip3 install --user -r requirements.txt",
  "postCreateCommand": "bash ./.devcontainer/post-install.sh",

  "features": {
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": "latest",
    // Disabled because it does not work on Macs
    //      "ghcr.io/devcontainers/features/nvidia-cuda": "latest",
    "git": "latest"
  },
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",

  //    "hostRequirements": {
  //      "gpu":"optional" // For nvidia-cuda support
  //    },

  "remoteEnv": {
    // Use this environment variable within your
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
    //		"PATH": "${containerEnv:PATH}:${containerEnv:HOME}/.local/bin"
  },

  "mounts": [
    // Re-use local SSH keys (useful if you use SSH keys for Git repo access or other SSH work)
    "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
    // Hugging Face cache
    "source=${localEnv:HOME}/.cache,target=/home/vscode/.cache,type=bind,consistency=cached",
    // Re-use local Git configuration
    "source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig,type=bind,consistency=cached"
  ]
}
