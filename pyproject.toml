[tool.poetry]
name = "my-python-ai-kata"
version = "0.0.0"
description = "Arch AI Sandbox"
authors = ["Mario Scalas <mario.scalas@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/scalasm/scalasm/my-python-ai-kata"
repository = "https://github.com/scalasm/scalasm/my-python-ai-kata"
documentation = "https://my-python-ai-kata.readthedocs.io"
classifiers = [
    "Development Status :: 1 - Planning",
]

[tool.poetry.urls]
Changelog = "https://github.com/scalasm/my-python-ai-kata/releases"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.poetry.dependencies]
python = "^3.13"
click = ">=8.1.8"
sqlalchemy = "^2.0.25"
psycopg2-binary = "^2.9.9"
pydantic = "^2.6.0"
ldap3 = "^2.9.1"
openai = "^1.68.2"
fastmcp = "^2.7.0"
asyncio = "^3.4.3"
langchain-community = "^0.3.24"
langchain-openai = "^0.3.21"
langchain-anthropic = "^0.3.15"
bs4 = "^0.0.2"
lxml = "^5.4.0"
langgraph = "^0.4.8"
mcp = {extras = ["cli"], version = "^1.9.3"}
uv = "^0.8.3"
dotenv = "^0.9.9"
strands-agents = {extras = ["openai", "litellm", "a2a"], version = "^1.4.0"}
strands-agents-tools = "^0.2.3"
strands-agents-mcp-server = "^0.1.2"

[tool.poetry.group.extra.dependencies]
boto3 = "^1.35.92"
diffusers = "^0.32.2"
scikit-learn = "^1.7.0"
ipython-sql = "^0.5.0"
pandas = "^2.2.0"

[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
black = ">=21.10b0"
coverage = {extras = ["toml"], version = ">=6.2"}
darglint = ">=1.8.1"
flake8 = ">=4.0.1"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2021.11.12"
isort = ">=5.10.1"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = "^8.4.1"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}
myst-parser = {version = ">=0.16.1"}
jupyter = "^1.0.0"
ruff = "^0.11.10"
nox = "^2025.5.1"
nox-poetry = "^1.2.0"

[tool.poetry.scripts]
clai = "my_python_ai_kata.__main__:main"
english_assistant = "my_python_ai_kata.agents.teachers_assistant_a2a:start_english_assistant"
math_assistant = "my_python_ai_kata.agents.teachers_assistant_a2a:start_math_assistant"
computer_science_assistant = "my_python_ai_kata.agents.teachers_assistant_a2a:start_computer_science_assistant"
language_assistant = "my_python_ai_kata.agents.teachers_assistant_a2a:start_language_assistant"
general_assistant = "my_python_ai_kata.agents.teachers_assistant_a2a:start_general_assistant"
run_teacher_assistant = "my_python_ai_kata.agents.teachers_assistant:start_teacher_agent"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["my_python_ai_kata", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
typeCheckingMode = "standard"
pythonVersion = "3.13"
strictParameterNullChecking = true
reportMissingTypeStubs = false
# reportUnknownMemberType = true
# reportUnknownParameterType = true
# reportUnknownVariableType = true
# reportUnknownArgumentType = true
reportPrivateUsage = true
reportUntypedFunctionDecorator = true
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportUnnecessaryCast = true
# reportUnnecessaryComparison = true
